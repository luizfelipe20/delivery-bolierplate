# Generated by Django 3.0.8 on 2020-12-29 00:05

import datetime
from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Required. 15 characters or fewer. Letters,                     numbers and @/./+/-/_ characters', max_length=255, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'Enter a valid username.', 'invalid')], verbose_name='username')),
                ('first_name', models.CharField(max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(max_length=255, verbose_name='last name')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='nome')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.                     Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_trusty', models.BooleanField(default=False, help_text='Designates whether this user has confirmed his account.', verbose_name='trusty')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='telefone')),
                ('ddd', models.CharField(blank=True, max_length=2, null=True, verbose_name='ddd')),
                ('login_facebook', models.BooleanField(blank=True, null=True)),
                ('categories_music', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
            },
        ),
        migrations.CreateModel(
            name='Characteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('SIZE', 'Tamanho'), ('COLOR', 'Cor')], max_length=5, verbose_name='Tipo')),
                ('title', models.CharField(blank=True, max_length=20, null=True, verbose_name='Descrição')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Quantidade')),
            ],
            options={
                'verbose_name': 'Característica',
                'verbose_name_plural': 'Características',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='quantidade')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='valor')),
                ('characteristic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='platform_delivery.Characteristic', verbose_name='característica do produto')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Itens',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('value', models.FloatField(verbose_name='Preço')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('availability', models.BooleanField(default=False, verbose_name='Disponibilidade')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platform_delivery.Category', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.FloatField(default=0, verbose_name='estrelas')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comentário')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_rating', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platform_delivery.Product')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='', verbose_name='Image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platform_delivery.Product')),
            ],
            options={
                'verbose_name': 'Imagem do produto',
                'verbose_name_plural': 'Imagens do produto',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, verbose_name='Número do pedido')),
                ('payment_way', models.CharField(choices=[('CARD', 'Cartão de crédito'), ('BOLETO', 'Boleto'), ('TRANSFER', 'Transferência bancária')], max_length=10, verbose_name='Forma de pagamento')),
                ('status', models.CharField(choices=[('RECEIVED', 'Pedido recebido'), ('PAID', 'Pagamento aprovado'), ('NF', 'Nota fiscal emitida'), ('TRANSPORT', 'Em transporte'), ('DELIVERED', 'Entregue'), ('CANCELED', 'Cancelado')], default='RECEIVED', max_length=10, verbose_name='Status')),
                ('total_value', models.FloatField(default=0, verbose_name='Valor bruto')),
                ('discount_value', models.FloatField(default=0, verbose_name='Valor do desconto')),
                ('value', models.FloatField(default=0, verbose_name='Valor total')),
                ('date', models.DateTimeField(default=datetime.datetime.now, verbose_name='Data da compra')),
                ('tracking_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Código de rastreio')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='cliente')),
                ('items', models.ManyToManyField(to='platform_delivery.Item', verbose_name='itens do pedido')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platform_delivery.Product', verbose_name='produto'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='cliente')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platform_delivery.Product', verbose_name='produto')),
            ],
            options={
                'verbose_name': 'Favoritado',
                'verbose_name_plural': 'Favoritados',
            },
        ),
        migrations.AddField(
            model_name='characteristic',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platform_delivery.Product'),
        ),
        migrations.CreateModel(
            name='Bag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, verbose_name='Quantidade')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='valor')),
                ('characteristic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platform_delivery.Characteristic')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='platform_delivery.Product', verbose_name='produto')),
            ],
            options={
                'verbose_name': 'Sacola',
                'verbose_name_plural': 'Sacolas',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cep', models.CharField(max_length=25, verbose_name='CEP')),
                ('neighborhood', models.CharField(max_length=255, verbose_name='Bairro')),
                ('street', models.CharField(max_length=255, verbose_name='Rua')),
                ('number', models.CharField(max_length=10, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ponto de referência')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Endereço',
                'verbose_name_plural': 'Endereços',
            },
        ),
    ]
